-- MySQL Script generated by MySQL Workbench
-- Mon Dec 14 20:00:44 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema chatbotdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema chatbotdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `chatbotdb` DEFAULT CHARACTER SET latin1 ;
USE `chatbotdb` ;

-- -----------------------------------------------------
-- Table `chatbotdb`.`profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`profile` (
  `id` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(25) NOT NULL,
  `status` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`sector`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`sector` (
  `id` TINYINT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  `status` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `cpf` CHAR(11) NOT NULL,
  `registration` BIGINT(8) UNSIGNED ZEROFILL NOT NULL,
  `status` TINYINT(1) UNSIGNED NOT NULL,
  `email` VARCHAR(80) NOT NULL,
  `fullname` VARCHAR(45) NOT NULL,
  `cellphone` CHAR(11) NOT NULL,
  `password` VARCHAR(60) NULL,
  `profile_id` TINYINT(1) UNSIGNED NULL,
  `sector_id` TINYINT(3) UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_user_profile_idx` (`profile_id` ASC),
  INDEX `fk_user_sector1_idx` (`sector_id` ASC),
  UNIQUE INDEX `registration_UNIQUE` (`registration` ASC),
  UNIQUE INDEX `cellphone_UNIQUE` (`cellphone` ASC),
  CONSTRAINT `fk_user_profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `chatbotdb`.`profile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_sector1`
    FOREIGN KEY (`sector_id`)
    REFERENCES `chatbotdb`.`sector` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `chatbotdb`.`topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`topic` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  `status` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`content` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `status` TINYINT(1) UNSIGNED NOT NULL,
  `description` VARCHAR(255) NULL,
  `attachment` VARCHAR(200) NULL,
  `topic_id` INT UNSIGNED NOT NULL,
  `sector_id` TINYINT(3) UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_content_sector1_idx` (`sector_id` ASC),
  INDEX `fk_content_topic1_idx` (`topic_id` ASC),
  CONSTRAINT `fk_content_sector1`
    FOREIGN KEY (`sector_id`)
    REFERENCES `chatbotdb`.`sector` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_content_topic1`
    FOREIGN KEY (`topic_id`)
    REFERENCES `chatbotdb`.`topic` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`keyword`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`keyword` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`answer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`monitoring`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`monitoring` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `status` TINYINT(1) NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `content_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_monitoring_user1_idx` (`user_id` ASC),
  INDEX `fk_monitoring_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_monitoring_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `chatbotdb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_monitoring_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `chatbotdb`.`content` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`log` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `status` TINYINT(1) UNSIGNED NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_log_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_log_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `chatbotdb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`message` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `actor` TINYINT(1) NOT NULL,
  `description` VARCHAR(80) NOT NULL,
  `content_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`question` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`content_has_answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`content_has_answer` (
  `content_id` INT UNSIGNED NOT NULL,
  `answer_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`content_id`, `answer_id`),
  INDEX `fk_content_has_answer_answer1_idx` (`answer_id` ASC),
  INDEX `fk_content_has_answer_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_content_has_answer_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `chatbotdb`.`content` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_content_has_answer_answer1`
    FOREIGN KEY (`answer_id`)
    REFERENCES `chatbotdb`.`answer` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`content_has_keyword`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`content_has_keyword` (
  `content_id` INT UNSIGNED NOT NULL,
  `keyword_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`content_id`, `keyword_id`),
  INDEX `fk_content_has_keyword_keyword1_idx` (`keyword_id` ASC),
  INDEX `fk_content_has_keyword_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_content_has_keyword_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `chatbotdb`.`content` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_content_has_keyword_keyword1`
    FOREIGN KEY (`keyword_id`)
    REFERENCES `chatbotdb`.`keyword` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`content_has_question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`content_has_question` (
  `content_id` INT UNSIGNED NOT NULL,
  `question_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`content_id`, `question_id`),
  INDEX `fk_content_has_question_question1_idx` (`question_id` ASC),
  INDEX `fk_content_has_question_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_content_has_question_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `chatbotdb`.`content` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_content_has_question_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `chatbotdb`.`question` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`message_has_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`message_has_log` (
  `message_id` INT UNSIGNED NOT NULL,
  `log_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`message_id`, `log_id`),
  INDEX `fk_message_has_log_log1_idx` (`log_id` ASC),
  INDEX `fk_message_has_log_message1_idx` (`message_id` ASC),
  CONSTRAINT `fk_message_has_log_message1`
    FOREIGN KEY (`message_id`)
    REFERENCES `chatbotdb`.`message` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_message_has_log_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `chatbotdb`.`log` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`content_has_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`content_has_log` (
  `content_id` INT UNSIGNED NOT NULL,
  `log_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`content_id`, `log_id`),
  INDEX `fk_content_has_log_log1_idx` (`log_id` ASC),
  INDEX `fk_content_has_log_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_content_has_log_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `chatbotdb`.`content` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_content_has_log_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `chatbotdb`.`log` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`monitoring_has_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`monitoring_has_log` (
  `monitoring_id` INT UNSIGNED NOT NULL,
  `log_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`monitoring_id`, `log_id`),
  INDEX `fk_monitoring_has_log_log1_idx` (`log_id` ASC),
  INDEX `fk_monitoring_has_log_monitoring1_idx` (`monitoring_id` ASC),
  CONSTRAINT `fk_monitoring_has_log_monitoring1`
    FOREIGN KEY (`monitoring_id`)
    REFERENCES `chatbotdb`.`monitoring` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_monitoring_has_log_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `chatbotdb`.`log` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatbotdb`.`authentication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatbotdb`.`authentication` (
  `token` VARCHAR(36) NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `user_fullname` VARCHAR(45) NOT NULL,
  `user_email` VARCHAR(80) NOT NULL,
  `starting_date` DATETIME NOT NULL,
  `ending_date` DATETIME NOT NULL,
  PRIMARY KEY (`token`),
  UNIQUE INDEX `token_UNIQUE` (`token` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
